/Applications/CLion.app/Contents/bin/cmake/mac/aarch64/bin/cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_MAKE_PROGRAM=/Applications/CLion.app/Contents/bin/ninja/mac/aarch64/ninja -DCMAKE_TOOLCHAIN_FILE=/Users/denglang/.vcpkg-clion/vcpkg/scripts/buildsystems/vcpkg.cmake -G Ninja -S /Users/denglang/workspace/CppProj/learn_opengl -B /Users/denglang/workspace/CppProj/learn_opengl/cmake-build-debug
-- Running vcpkg install
Detecting compiler hash for triplet arm64-osx...
All requested packages are currently installed.
Total install time: 167 ns
assimp provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(assimp CONFIG REQUIRED)
  target_link_libraries(main PRIVATE assimp::assimp)

assimp provides pkg-config modules:

    # Import various well-known 3D model formats in an uniform manner.
    assimp

freeimage provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(freeimage CONFIG REQUIRED)
  target_link_libraries(main PRIVATE freeimage::FreeImage freeimage::FreeImagePlus)

freetype-gl provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(freetype-gl CONFIG REQUIRED)
  target_link_libraries(main PRIVATE freetype-gl)

freetype-gl provides pkg-config modules:

    # OpenGL text using one vertex buffer, one texture and FreeType
    freetype-gl

glad provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(glad CONFIG REQUIRED)
  target_link_libraries(main PRIVATE glad::glad)

glfw3 provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(glfw3 CONFIG REQUIRED)
  target_link_libraries(main PRIVATE glfw)

glfw3 provides pkg-config modules:

    # A multi-platform library for OpenGL, window and input
    glfw3

glm provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(glm CONFIG REQUIRED)
  target_link_libraries(main PRIVATE glm::glm)

nanovg provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(nanovg CONFIG REQUIRED)
  target_link_libraries(main PRIVATE nanovg::nanovg)

The package nlohmann-json provides CMake targets:

    find_package(nlohmann_json CONFIG REQUIRED)
    target_link_libraries(main PRIVATE nlohmann_json::nlohmann_json)

The package nlohmann-json can be configured to not provide implicit conversions via a custom triplet file:

    set(nlohmann-json_IMPLICIT_CONVERSIONS OFF)

For more information, see the docs here:
    
    https://json.nlohmann.me/api/macros/json_use_implicit_conversions/

tinygltf is header-only and can be used from CMake via:

    find_path(TINYGLTF_INCLUDE_DIRS "tiny_gltf.h")
    target_include_directories(main PRIVATE ${TINYGLTF_INCLUDE_DIRS})

-- Running vcpkg install - done
CMake Deprecation Warning at cmake-build-debug/vcpkg_installed/arm64-osx/share/rapidjson/RapidJSONConfig.cmake:3 (cmake_minimum_required):
  Compatibility with CMake < 3.5 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.
Call Stack (most recent call first):
  /Users/denglang/.vcpkg-clion/vcpkg/scripts/buildsystems/vcpkg.cmake:859 (_find_package)
  /Applications/CLion.app/Contents/bin/cmake/mac/aarch64/share/cmake-3.27/Modules/CMakeFindDependencyMacro.cmake:76 (find_package)
  cmake-build-debug/vcpkg_installed/arm64-osx/share/assimp/assimpConfig.cmake:36 (find_dependency)
  /Users/denglang/.vcpkg-clion/vcpkg/scripts/buildsystems/vcpkg.cmake:859 (_find_package)
  CMakeLists.txt:15 (find_package)


-- RapidJSON found. Headers: /Users/denglang/workspace/CppProj/learn_opengl/cmake-build-debug/vcpkg_installed/arm64-osx/share/rapidjson/../../include
-- Configuring done (5.0s)
-- Generating done (0.0s)
-- Build files have been written to: /Users/denglang/workspace/CppProj/learn_opengl/cmake-build-debug
